/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package onlinemusicstore;
import java.sql.*;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author carlo
 */
public class PreviousOrders extends javax.swing.JFrame {

    String un = "";
    String pass = "";
    String defaultTable = "";
    /**
     * Creates new form PreviousOrders
     */
    public PreviousOrders() {
        initComponents();
    }
    public PreviousOrders(String p, String s)
    {
        initComponents();
        setLocationRelativeTo(null);
        try{
            un = p;
            pass = s;
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","Horsey3210.");
            ResultSet rs = null;
            PreparedStatement pst = null;
            String q =  "SELECT O.ORDER_ID, O.ALBUM_ID, O.SONG_ID, O.ORDER_TOTAL, O.PURCHASE_DATE\n" +
                        "FROM ORDERS O, CUSTOMER C\n" +
                        "WHERE O.CUSTOMER_ID = C.CUSTOMER_ID AND C.USERNAME = '" + un +"'";
            defaultTable = q;
            pst=conn.prepareStatement(q);
            rs = pst.executeQuery();

            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){System.out.println(e);}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label4 = new javax.swing.JLabel();
        album_id = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        label5 = new javax.swing.JLabel();
        song_id = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label4.setText("Enter Album ID For Details:");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Order History");

        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Go Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox1.setText("Show Only Purchased Albums");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox2.setText("Show Only Purchased Songs");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        label5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        label5.setText("Enter Song ID For Details:");

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(46, 46, 46))
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(song_id, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addComponent(label4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(album_id, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addComponent(label5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(71, 71, 71)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(label4)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(album_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(33, 33, 33)
                .addComponent(label5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(song_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addGap(0, 129, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String a_id = album_id.getText();
        for (int i = 0; i < a_id.length(); i++)
        {
            if (a_id.charAt(i) == '\'')
            {
                a_id = a_id.substring(0, i) + "''" + a_id.substring(i + 1, a_id.length()); //in sql, to escape ', just double them. '' -> '
                i++; //have to increase i by 2 instead of 1 when ' is found, otherwise will cause an infinite loop
            }
        }
        try{
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","Horsey3210.");
            ResultSet rs = null;
            PreparedStatement pst = null;
            String q = "";

            if(a_id.equals(""))
            {
                q = defaultTable;
            }
            else
            {
                q = "SELECT A.ARTIST, A.ALBUM_NAME, A.GENRE, A.SUB_GENRE, S.SONG_ID, S.TITLE\n" +
                    "FROM ORDERS O, CUSTOMER C, TABLE(C.A_OWNED) T1, ALBUM A, SONG_LIST S\n" +
                    "WHERE O.CUSTOMER_ID = C.CUSTOMER_ID AND C.USERNAME = '" + un + "' AND T1.COLUMN_VALUE = O.ALBUM_ID" +
                    " AND A.ALBUM_ID = T1.COLUMN_VALUE AND A.ALBUM_ID = '" + a_id + "' AND S.ALBUM = A.ALBUM_NAME";
            }

            pst=conn.prepareStatement(q);
            rs = pst.executeQuery();
            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        dispose();
        Dashboard d = new Dashboard(un, pass);
        d.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String s_id = song_id.getText();
        for (int i = 0; i < s_id.length(); i++)
        {
            if (s_id.charAt(i) == '\'')
            {
                s_id = s_id.substring(0, i) + "''" + s_id.substring(i + 1, s_id.length()); //in sql, to escape ', just double them. '' -> '
                i++; //have to increase i by 2 instead of 1 when ' is found, otherwise will cause an infinite loop
            }
        }
        try{
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","Horsey3210.");
            ResultSet rs = null;
            PreparedStatement pst = null;
            String q = "";

            if(s_id.equals(""))
            {
                q = defaultTable;
            }
            else
            {
                q = "SELECT S.SONG_ID, S.TITLE, S.LEN, S.ARTIST, S.ALBUM, S.GENRE\n" +
                    "FROM ORDERS O, CUSTOMER C, TABLE(C.S_OWNED) T1, SONG_LIST S\n" +
                    "WHERE O.CUSTOMER_ID = C.CUSTOMER_ID AND C.USERNAME = '" + un + "' AND T1.COLUMN_VALUE = O.SONG_ID" +
                    " AND S.SONG_ID = O.SONG_ID AND S.SONG_ID = '" + s_id + "'";
            }

            pst=conn.prepareStatement(q);
            rs = pst.executeQuery();
            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","Horsey3210.");
            ResultSet rs = null;
            PreparedStatement pst = null;
            String q = "";

            if(jCheckBox1.isSelected())
            {
                q = "SELECT O.ORDER_ID, O.ALBUM_ID, A.ALBUM_NAME, O.ORDER_TOTAL, O.PURCHASE_DATE\n" +
                    "FROM ORDERS O, CUSTOMER C, TABLE(C.A_OWNED) T1, ALBUM A\n" +
                    "WHERE O.CUSTOMER_ID = C.CUSTOMER_ID AND C.USERNAME = '" + un + "' AND T1.COLUMN_VALUE = O.ALBUM_ID AND A.ALBUM_ID = T1.COLUMN_VALUE";
            }
            else
            {
                q = defaultTable;
            }

            pst=conn.prepareStatement(q);
            rs = pst.executeQuery();
            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
        try{
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","Horsey3210.");
            ResultSet rs = null;
            PreparedStatement pst = null;
            String q = "";

            if(jCheckBox2.isSelected())
            {
                q = "SELECT O.ORDER_ID, O.SONG_ID, S.TITLE, O.ORDER_TOTAL, O.PURCHASE_DATE\n" +
                    "FROM ORDERS O, CUSTOMER C, TABLE(C.S_OWNED) T1, SONG_LIST S\n" +
                    "WHERE O.CUSTOMER_ID = C.CUSTOMER_ID AND C.USERNAME = '" + un + "' AND T1.COLUMN_VALUE = O.SONG_ID AND S.SONG_ID = T1.COLUMN_VALUE";
            }
            else
            {
                q = defaultTable;
            }

            pst=conn.prepareStatement(q);
            rs = pst.executeQuery();
            jTable2.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PreviousOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PreviousOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PreviousOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PreviousOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PreviousOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField album_id;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JLabel label4;
    private javax.swing.JLabel label5;
    private javax.swing.JTextField song_id;
    // End of variables declaration//GEN-END:variables
}
